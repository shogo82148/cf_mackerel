AWSTemplateFormatVersion: 2010-09-09
Description: mackerel aws integration settings

Resources:
  MackerelAWSIntegrationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "MackerelAWSIntegrationRole-${AWS::Region}"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            AWS: arn:aws:iam::217452466226:root
          Action:
          - sts:AssumeRole
          Condition:
            StringEquals:
              "sts:ExternalId": "Mackerel-AWS-Integration"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonRedshiftReadOnlyAccess
      - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess
      - arn:aws:iam::aws:policy/AmazonElastiCacheReadOnlyAccess
      - arn:aws:iam::aws:policy/AmazonRDSReadOnlyAccess
      - arn:aws:iam::aws:policy/AWSLambdaReadOnlyAccess
      - arn:aws:iam::aws:policy/AmazonSQSReadOnlyAccess
      - arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess
      - arn:aws:iam::aws:policy/CloudFrontReadOnlyAccess
      - arn:aws:iam::aws:policy/CloudWatchReadOnlyAccess
      Policies:
      - PolicyName: DescribeTags
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - "ec2:DescribeTags"
            - "elasticloadbalancing:DescribeTags"
            - "rds:ListTagsForResource"
            - "elasticache:ListTagsForResource"
            - "redshift:DescribeTags"
            - "lambda:ListTags"
            - "sqs:ListQueueTags"
            - "apigateway:GET"
            - "apigateway:OPTIONS"
            Resource: "*"

Outputs:
  MackerelAWSIntegrationRole:
    Value: !GetAtt MackerelAWSIntegrationRole.Arn
